stages:
  - build
  - deploy

variables:
  FRONTEND_IMAGE: "$CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHORT_SHA"
  BACKEND_IMAGE: "$CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHORT_SHA"

build_frontend:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -t $FRONTEND_IMAGE .
    - docker push $FRONTEND_IMAGE

build_backend:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -t $BACKEND_IMAGE ./server
    - docker push $BACKEND_IMAGE

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh
  script:
    - echo "$SSH_PRIVATE_KEY" > id_rsa && chmod 600 id_rsa
    - |
      ssh -o StrictHostKeyChecking=no -i id_rsa ec2-user@$EC2_HOST "
        docker login registry.gitlab.com -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD &&
        docker pull $FRONTEND_IMAGE &&
        docker pull $BACKEND_IMAGE &&
        docker stop frontend || true &&
        docker rm frontend || true &&
        docker stop backend || true &&
        docker rm backend || true &&
        docker run -d --name frontend -p 80:80 $FRONTEND_IMAGE &&
        docker run -d --name backend -p 3000:3000 -e PORT=3000 $BACKEND_IMAGE
      "
  only:
    - main
